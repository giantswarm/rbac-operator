{{ if .Values.Installation.V1.GiantSwarm.OIDC.Enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tenant-admin
  labels:
    app: rbac-operator
    giantswarm.io/service-type: "managed"
rules:
- apiGroups:
  - cluster.x-k8s.io
  - infrastructure.giantswarm.io
  resources:
  - clusters
  - machinedeployments
  - awsclusters
  - awsmachinedeployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - application.giantswarm.io
  resources:
  - appcatalogs
  - apps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
# access to create RBAC in default namespace
# should be changed with access to create SAs in `installation`/`<organization-name>` namespaces
# after cluster CRs moved into organization namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tenant-admin-manage-rbac
  namespace: default
  labels:
    app: rbac-operator
    giantswarm.io/service-type: "managed"
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - *
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - *
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tenant-admin
  labels:
    app: rbac-operator
    giantswarm.io/service-type: "managed"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tenant-admin
subjects:
- kind: Group
  name: {{ .Values.Installation.V1.Kubernetes.Auth.TenantAdminTargetGroup }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tenant-admin-view-all
  labels:
    app: rbac-operator
    giantswarm.io/service-type: "managed"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view-all
subjects:
- kind: Group
  name: {{ .Values.Installation.V1.Kubernetes.Auth.TenantAdminTargetGroup }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant-admin-manage-rbac
  labels:
    app: rbac-operator
    giantswarm.io/service-type: "managed"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tenant-admin-manage-rbac
  namespace: default
subjects:
- kind: Group
  name: {{ .Values.Installation.V1.Kubernetes.Auth.TenantAdminTargetGroup }}
{{ end }}
